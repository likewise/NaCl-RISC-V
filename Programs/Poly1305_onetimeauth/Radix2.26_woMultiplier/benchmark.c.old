#include "benchmark.h"
extern void icachemisses(); 

    void convert_to_radix226(unsigned int* r, unsigned char *k){
        r[0] = k[0] + (k[1] << 8) + (k[2] << 16) + ((k[3] & 3) << 24);
        r[1] = ((k[3] >> 2) & 3) + ((k[4] & 252) << 6) + (k[5] << 14) +
            ((k[6] & 15) << 22);
        r[2] = (k[6] >> 4) + ((k[7] & 15) << 4) + ((k[8] & 252) << 12) +
            ((k[9] & 63) << 20);
        r[3] =
            (k[9] >> 6) + (k[10] << 2) + ((k[11] & 15) << 10) + ((k[12] & 252) << 18);
        r[4] = k[13] + (k[14] << 8) + ((k[15] & 15) << 16);
    }

    void dobenchmark() {

        unsigned int a[5];
        unsigned int b[5];
    
        static unsigned char a_bytes[16] = {0x27, 0xbb, 0x3a, 0x45, 0x52, 0x60, 0x13, 0x22, 0x35, 0x89, 0x9e, 0x27, 0xc7, 0xc9, 0xa, 0xc9};
        static unsigned char b_bytes[16] = {0x29, 0xaa, 0xdd, 0xfe, 0x13, 0xb8, 0x58, 0xbd, 0x94, 0xf8, 0x89, 0x55, 0xc4, 0x47, 0xb4, 0x27, 0x27};

	icachemisses();

        convert_to_radix226(a, a_bytes);
        convert_to_radix226(b,b_bytes);


        uint64_t timings[21];
        for(int i =0;i<21;i++){
            timings[i]=getcycles();
            mulmod226asm(a,b);
        }

        for(int i=1;i<21;i++){
            printf("%llu, ",(timings[i]>>32)-(timings[i-1]>>32));
        }
        printf("\n");

	for(int i=1;i<21;i++){
            printf("%llu, ",(timings[i]&0xffffffff)-(timings[i-1]&0xffffffff));
        }
        printf("\n");
	printf("\n\n");
	
    }
